res <- scDiffEx(brazil_sce_subset,
useAssay = "log_cpm",
condition = "TB_status",
significance = 0.05,
ntop = 500,
usesig = TRUE,
diffexmethod = "limma",
levelofinterest = "Latent",
analysisType = "allcoef",
adjust = "fdr")
#plot heatmap
plotDiffEx(brazil_sce_subset,
condition = "TB_status",
geneList = rownames(res)[1:500],
annotationColors = "auto",
displayColumnLabels = FALSE,
scaleExpression = TRUE)
summarizeTable(brazil_sce_subset, useAssay = "logcpm")
#method 1
res <- scDiffEx(brazil_sce_subset,
useAssay = "log_cpm",
condition = "TB_status",
significance = 0.05,
ntop = 500,
usesig = TRUE,
diffexmethod = "limma",
levelofinterest = "Latent",
analysisType = "allcoef",
adjust = "fdr")
#plot heatmap
plotDiffEx(brazil_sce_subset,
condition = "TB_status",
geneList = rownames(res)[1:500],
annotationColors = "auto",
displayColumnLabels = FALSE,
scaleExpression = TRUE)
summarizeTable(brazil_sce_subset, useAssay = "log_cpm")
brazil_sce_subset@NAMES
singleCellTK()
install.packages("tidyverse")
install.packages("devtools")
devtools::install_github(("compbiomed/singleCellTK"))
install.packages("BiocManager")
devtools::install_github("compbiomed/Aubryodem/TBsignatureprofiler")
devtools::install_github("compbiomed/aubryodem/tbsignatureprofiler")
devtools::install_github("compbiomed/TBSignatureProfiler")
library(singleCellTK)
singleCellTK()
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(tidyverse)
library(singleCellTK)
library(TBSignatureProfiler)
})
enrichr_top500_res <- read_csv("enrichR-results-2019-07-25.csv") %>%
filter(Adjusted.P.value < 0.05)
write_csv(enrichr_top500_res, "enrichr_top500_sig.csv")
enrichr_top500_res
View(enrichr_top500_res)
library(readr)
control <- read_csv("TB_factor_of_interest/control.csv")
View(control)
control <- read_csv("TB_factor_of_interest/control.csv") %>%
filter(Adjusted.P.value < 0.05)
View(control)
control <- read_csv("TB_factor_of_interest/control.csv") %>%
filter(TB_status_limma_padj < 0.05)
View(control)
control <- read_csv("TB_factor_of_interest/control.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(control)
write_csv(control, "TB_factor_of_interest/control_top500.csv")
convert <- read_csv("TB_factor_of_interest/convert.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(convert)
latent <- read_csv("TB_factor_of_interest/latent.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(latent)
progressor <- read_csv("TB_factor_of_interest/progressor.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(progressor)
subclinical <- read_csv("TB_factor_of_interest/subclinical.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(subclinical)
TB_disease <- read_csv("TB_factor_of_interest/TB_disease.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(TB_disease)
#Filter top 500 genes
control <- read_csv("TB_factor_of_interest/control.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(control)
convert <- read_csv("TB_factor_of_interest/convert.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(convert)
latent <- read_csv("TB_factor_of_interest/latent.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(latent)
progressor <- read_csv("TB_factor_of_interest/progressor.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(progressor)
subclinical <- read_csv("TB_factor_of_interest/subclinical.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(subclinical)
TB_disease <- read_csv("TB_factor_of_interest/TB_disease.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(TB_disease)
#write filtered results to file for uploading to EnrichR
write_csv(control, "TB_factor_of_interest/control_top500.csv")
write_csv(convert, "TB_factor_of_interest/convert_top500.csv")
write_csv(latent, "TB_factor_of_interest/latent_top500.csv")
write_csv(progressor, "TB_factor_of_interest/progressor_top500.csv")
write_csv(subclinical, "TB_factor_of_interest/subclinical_top500.csv")
write_csv(TB_disease, "TB_factor_of_interest/TB_disease_top500.csv")
control_convert <- read_csv("TB_each_vs_each/TB_Control_Convert_Pathways/TB_status_limma2019-11-20_Control_Convert.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(control_convert)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(tidyverse)
library(singleCellTK)
library(TBSignatureProfiler)
})
#control vs convert pathways
control_convert <- read_csv("TB_each_vs_each/TB_Control_Convert_Pathways/TB_status_limma2019-11-20_Control_Convert.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(control_convert)
control_latent <- read_csv("TB_each_vs_each/TB_Control_Convert_Pathways/TB_status_limma2019-11-20_Control_Latent.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(control_latent)
control_latent <- read_csv("TB_each_vs_each/TB_Control_Latent_Pathways/TB_status_limma2019-11-20_Control_Latent.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(control_latent)
write_csv(control_latent, "TB_each_vs_each/TB_Control_Latent_Pathways/control_latent_top500.csv")
control_progressor <- read_csv("TB_each_vs_each/TB_Control_Progressor_Pathways/TB_status_limma2019-11-20_Control_Progressor.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(control_progressor)
write_csv(control_progressor, "TB_each_vs_each/TB_Control_Progressor_Pathways/control_progressor_top500.csv")
control_subclinical <- read_csv("TB_each_vs_each/TB_Control_Subclinical_Pathways/TB_status_limma2019-11-20_Control_Subclinical.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(control_subclinical)
write_csv(control_subclinical, "TB_each_vs_each/TB_Control_Subclinical_Pathways/control_subclinical_top500.csv")
control_TB_disease <- read_csv("TB_each_vs_each/TB_Control_TB_Disease_Pathways/TB_status_limma2019-11-20_Control_TB_Disease.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(control_TB_disease)
control_TB_disease <- read_csv("TB_each_vs_each/TB_Control_TB_Disease_Pathways/TB_status_limma2019-11-20_Control_Disease.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(control_TB_disease)
write_csv(control_TB_disease, "TB_each_vs_each/TB_Control_TB_Disease_Pathways/control_TB_disease_top500.csv")
convert_latent <- read_csv("TB_each_vs_each/TB_Convert_Latent_Pathways/TB_status_limma2019-11-20_Convert_Latent.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(convert_latent)
write_csv(convert_latent, "TB_each_vs_each/TB_Convert_Latent_Pathways/convert_latent_top500.csv")
#convert vs progressor pathways
convert_progressor <- read_csv("TB_each_vs_each/TB_Convert_Progressors_Pathways/TB_status_limma2019-11-20_Convert_Progressor.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(convert_progressor)
#convert vs progressor pathways
convert_progressor <- read_csv("TB_each_vs_each/TB_Convert_Progressors_Pathways/TB_status_limma2019-11-20_Convert_Progressors.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(convert_progressor)
write_csv(convert_progressor, "TB_each_vs_each/TB_Convert_Progressors_Pathways/convert_progressor_top500.csv")
#convert vs subclinical pathways
convert_subclinical <- read_csv("TB_each_vs_each/TB_Convert_Subclinical_Pathways/TB_status_limma2019-11-20_Convert_Subclinical.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(convert_subclinical)
write_csv(convert_subclinical, "TB_each_vs_each/TB_Convert_Subclinical_Pathways/convert_subclinical_top500.csv")
#convert vs TB_disease pathways
convert_TB_disease <- read_csv("TB_each_vs_each/TB_Convert_TB_Disease_Pathways/TB_status_limma2019-11-20_Convert_Disease.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(convert_TB_disease)
write_csv(convert_TB_disease, "TB_each_vs_each/TB_Convert_TB_Disease_Pathways/convert_TB_disease_top500.csv")
#convert vs TB_disease pathways
convert_TB_disease <- read_csv("TB_each_vs_each/TB_Convert_TB_Disease_Pathways/TB_status_limma2019-11-20_Convert_TB_Disease.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(convert_TB_disease)
write_csv(convert_TB_disease, "TB_each_vs_each/TB_Convert_TB_Disease_Pathways/convert_TB_disease_top500.csv")
#tb_disease vs progressor pathways
tb_disease_progressor <- read_csv("TB_each_vs_each/TB_Disease_Progressor_Pathways/TB_status_limma2019-11-20_TB_disease_Progressor.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(tb_disease_progressor)
write_csv(tb_disease_progressor, "TB_each_vs_each/TB_Disease_Progressor_Pathways/tb_disease_progressor_top500.csv")
#tb_disease vs subclinical pathways
tb_disease_subclinical <- read_csv("TB_each_vs_each/TB_Disease_Subclinical_Pathways/TB_status_limma2019-11-20_TB_Disease_Subclinical.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(tb_disease_subclinical)
write_csv(tb_disease_subclinical, "TB_each_vs_each/TB_Disease_Subclinical_Pathways/tb_disease_subclinical_top500.csv")
#tb_disease vs subclinical pathways
tb_disease_subclinical <- read_csv("TB_each_vs_each/TB_Disease_Subclinical_Pathways/TB_status_limma2019-11-20_TB_Disease_Subclinical.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(tb_disease_subclinical)
write_csv(tb_disease_subclinical, "TB_each_vs_each/TB_Disease_Subclinical_Pathways/tb_disease_subclinical_top500.csv")
#tb_disease vs subclinical pathways
tb_disease_subclinical <- read_csv("TB_each_vs_each/TB_Disease_Subclinical_Pathways/TB_status_limma2019-11-20_TB_Disease_Subclinical.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(tb_disease_subclinical)
write_csv(tb_disease_subclinical, "TB_each_vs_each/TB_Disease_Subclinical_Pathways/tb_disease_subclinical_top500.csv")
latent_subclinical <- read_csv("TB_each_vs_each/TB_Latent_Subclinical_Pathways/TB_status_limma2019-11-20_Latent_Subclinical.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(latent_subclinical)
write_csv(tb_disease_subclinical, "TB_each_vs_each/TB_Disease_Subclinical_Pathways/latent_subclinical_top500.csv")
progressor_subclinical <- read_csv("TB_each_vs_each/TB_Progressor_Subclinical_Pathways/TB_status_limma2019-11-20_Progressor_Subclinical.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(progressor_subclinical)
write_csv(tb_disease_subclinical, "TB_each_vs_each/TB_Progressor_Subclinical_Pathways/progressor_subclinical_top500.csv")
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(tidyverse)
library(singleCellTK)
library(TBSignatureProfiler)
})
singleCellTK()
mean(mtcars$mpg)
version
?devtools
help(devtools)
??devtools
install.packages("devtools")
?devtools
??devtools
sessionInfo()
install.packages("KernSmooth")
??KernSmooth
?KernSmooth()
library(KernSmooth)
R.version.string
install.packages("tinytex")
tinytex::install_tinytex()  # install TinyTeX
?paste
getwd()
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(tidyverse)
library(singleCellTK)
library(TBSignatureProfiler)
})
control_latent_kegg <- read_txt("TB_each_vs_each/TB_Control_Latent_Pathways/KEGG_2019_Human_table.txt")
control_latent_kegg
control_latent_kegg <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/KEGG_2019_Human_table.txt")
control_latent_kegg
View(control_latent_kegg)
kegg <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/KEGG_2019_Human_table.txt")
reactome <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/Reactome_2016_table.txt")
wiki <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/Reactome_2016_table.txt")
control_latent_pathway <- rbind(kegg, reactome, wiki)
kegg <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/KEGG_2019_Human_table.txt")
reactome <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/Reactome_2016_table.txt")
wiki <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/Reactome_2016_table.txt")
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
filter(TB_status_limma_padj < 0.05)
View(kegg)
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
filter("Adjusted P-value" < 0.05)
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
filter("Adjusted P-value" < 0.05)
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
filter(`Adjusted P-value` < 0.05)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(tidyverse)
library(stringr)
library(singleCellTK)
library(TBSignatureProfiler)
})
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
names() <- str_replace_all(names(control_latent_pathway), c(" " = "_" ))
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
names() <- str_replace_all(names(), c(" " = "_" ))
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
names(control_latent_pathway) <- str_replace_all(names(control_latent_pathway), c(" " = "_" ))
control_latent_pathway <- rbind(kegg, reactome, wiki)
names(control_latent_pathway) <- str_replace_all(names(control_latent_pathway), c(" " = "_" ))
View(control_latent_pathway)
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
names() <- str_replace_all(names(control_latent_pathway), c(" " = "_" )) %>%
filter(Adjusted_P-value < 0.05)
control_latent_pathway <- rbind(kegg, reactome, wiki)
names() <- str_replace_all(names(control_latent_pathway), c(" " = "_" ))
control_latent_pathway <- filter(control_latent_pathway, Adjusted_P-value < 0.05)
control_latent_pathway <- rbind(kegg, reactome, wiki)
names() <- str_replace_all(names(control_latent_pathway), c(" " = "_" , "-" = "_"))
control_latent_pathway <- filter(control_latent_pathway, Adjusted_P_value < 0.05)
names() <- str_replace_all(names(control_latent_pathway), c(" " = "_" , "-" = "_"))
names(control_latent_pathway) <- str_replace_all(names(control_latent_pathway), c(" " = "_" , "-" = "_"))
control_latent_pathway <- filter(control_latent_pathway, Adjusted_P_value < 0.05)
View(control_latent_pathway)
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
names() <- str_replace_all(names(), c(" " = "_" , "-" = "_")) %>%
filter(Adjusted_P_value < 0.05)
kegg <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/KEGG_2019_Human_table.txt")
reactome <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/Reactome_2016_table.txt")
wiki <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/Reactome_2016_table.txt")
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
names() <- str_replace_all(names(), c(" " = "_" , "-" = "_")) %>%
filter(Adjusted_P_value < 0.05)
kegg <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/KEGG_2019_Human_table.txt")
reactome <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/Reactome_2016_table.txt")
wiki <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/Reactome_2016_table.txt")
control_latent_pathway <- rbind(kegg, reactome, wiki) %>%
names() <- str_replace_all(names(control_latent_pathway), c(" " = "_" , "-" = "_")) %>%
filter(Adjusted_P_value < 0.05)
joined <- rbind(kegg, reactome, wiki)
names(control_latent_pathway) <- str_replace_all(names(control_latent_pathway), c(" " = "_" , "-" = "_"))
control_latent_pathway <- filter(Adjusted_P_value < 0.05)
control_latent_pathway <- filter(joined, Adjusted_P_value < 0.05)
View(joined)
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
control_latent_pathway <- filter(joined, Adjusted_P_value < 0.05)
kegg <- read_tsv("TB_each_vs_each/" + i + "/KEGG_2019_Human_table.txt")
i <- "TB_Control_Latent_Pathways"
kegg <- read_tsv("TB_each_vs_each/" + i + "/KEGG_2019_Human_table.txt")
kegg <- read_tsv("TB_each_vs_each/", i , "/KEGG_2019_Human_table.txt")
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
i <- "TB_Control_Latent_Pathways"
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
reactome <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/Reactome_2016_table.txt")
wiki <- read_tsv("TB_each_vs_each/TB_Control_Latent_Pathways/Reactome_2016_table.txt")
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
control_latent_pathway <- filter(joined, Adjusted_P_value < 0.05)
i <- "TB_Control_Latent_Pathways"
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
reactome <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
wiki <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
control_latent_pathway <- filter(joined, Adjusted_P_value < 0.05)
i <- "TB_Control_Latent_Pathways"
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
reactome <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
wiki <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
pathways <- filter(joined, Adjusted_P_value < 0.05)
write_csv(pathways, file.path("TB_each_vs_each", i , "top_pathways.csv"))
list <- c("TB_Control_Latent_Pathways", "TB_Control_Progressor_Pathways", "TB_Control_Subclinical_Pathways", "TB_Control_TB_Disease_Pathways", "TB_Convert_Latent_Pathways", "TB_Convert_Progressors_Pathways", "TB_Convert_Subclinical_Pathways", "TB_Convert_TB_Disease_Pathways", "TB_Disease_Latent_Pathways", "TB_Disease_Progressor_Pathways", "TB_Disease_Subclinical_Pathways", "TB_Latent_Progressor_Pathways", "TB_Latent_Subclinical_Pathways", "TB_Progressor_Subclinical_Pathways")
top_pathways <- for(i in list) {
#extract data from enrichR databases
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
reactome <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
wiki <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
#bind the data files and filter top results
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
pathways <- filter(joined, Adjusted_P_value < 0.05)
write_csv(pathways, file.path("TB_each_vs_each", i , "top_pathways.csv"))
}
list <- c("TB_Control_Latent_Pathways", "TB_Control_Progressor_Pathways", "TB_Control_Subclinical_Pathways", "TB_Control_TB_Disease_Pathways", "TB_Convert_Latent_Pathways", "TB_Convert_Progressors_Pathways", "TB_Convert_Subclinical_Pathways", "TB_Convert_TB_Disease_Pathways",  "TB_Disease_Progressor_Pathways",  "TB_Latent_Progressor_Pathways", "TB_Latent_Subclinical_Pathways", "TB_Progressor_Subclinical_Pathways")
redo <-  c("TB_Disease_Latent_Pathways","TB_Disease_Subclinical_Pathways")
top_pathways <- for(i in list) {
#extract data from enrichR databases
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
reactome <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
wiki <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
#bind the data files and filter top results
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
pathways <- filter(joined, Adjusted_P_value < 0.05)
write_csv(pathways, file.path("TB_each_vs_each", i , "top_pathways.csv"))
}
list <- c("TB_Control_Latent_Pathways", "TB_Control_Progressor_Pathways", "TB_Control_Subclinical_Pathways", "TB_Control_TB_Disease_Pathways", "TB_Convert_Latent_Pathways", "TB_Convert_Progressors_Pathways", "TB_Convert_Subclinical_Pathways", "TB_Convert_TB_Disease_Pathways",  "TB_Disease_Progressor_Pathways",   "TB_Latent_Subclinical_Pathways", "TB_Progressor_Subclinical_Pathways")
redo <-  c("TB_Disease_Latent_Pathways","TB_Disease_Subclinical_Pathways","TB_Latent_Progressor_Pathways")
top_pathways <- for(i in list) {
#extract data from enrichR databases
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
reactome <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
wiki <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
#bind the data files and filter top results
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
pathways <- filter(joined, Adjusted_P_value < 0.05)
write_csv(pathways, file.path("TB_each_vs_each", i , "top_pathways.csv"))
}
list <- c("TB_Control_Latent_Pathways", "TB_Control_Progressor_Pathways", "TB_Control_Subclinical_Pathways", "TB_Control_TB_Disease_Pathways", "TB_Convert_Latent_Pathways", "TB_Convert_Progressors_Pathways", "TB_Convert_Subclinical_Pathways", "TB_Convert_TB_Disease_Pathways",  "TB_Disease_Progressor_Pathways",    "TB_Progressor_Subclinical_Pathways")
redo <-  c("TB_Disease_Latent_Pathways","TB_Disease_Subclinical_Pathways","TB_Latent_Progressor_Pathways", "TB_Latent_Subclinical_Pathways",)
top_pathways <- for(i in list) {
#extract data from enrichR databases
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
reactome <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
wiki <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
#bind the data files and filter top results
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
pathways <- filter(joined, Adjusted_P_value < 0.05)
write_csv(pathways, file.path("TB_each_vs_each", i , "top_pathways.csv"))
}
list <- c("TB_Control_Latent_Pathways", "TB_Control_Progressor_Pathways", "TB_Control_Subclinical_Pathways", "TB_Control_TB_Disease_Pathways", "TB_Convert_Latent_Pathways", "TB_Convert_Progressors_Pathways", "TB_Convert_Subclinical_Pathways", "TB_Convert_TB_Disease_Pathways",  "TB_Disease_Progressor_Pathways")
redo <-  c("TB_Disease_Latent_Pathways","TB_Disease_Subclinical_Pathways","TB_Latent_Progressor_Pathways", "TB_Latent_Subclinical_Pathways","TB_Progressor_Subclinical_Pathways")
top_pathways <- for(i in list) {
#extract data from enrichR databases
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
reactome <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
wiki <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
#bind the data files and filter top results
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
pathways <- filter(joined, Adjusted_P_value < 0.05)
write_csv(pathways, file.path("TB_each_vs_each", i , "top_pathways.csv"))
}
read_
singleCellTK()
tb_disease_latent <- read_csv("TB_each_vs_each/TB_Disease_Latent_Pathways/TB_status_limma2019-11-20_TB_Disease_Latent.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(tb_disease_latent)
write_csv(tb_disease_latent, "TB_each_vs_each/TB_Tb_disease_Latent_Pathways/tb_disease_latent_top500.csv")
tb_disease_latent <- read_csv("TB_each_vs_each/TB_Disease_Latent_Pathways/TB_status_limma2019-12-18_TB_Disease_Latent.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(tb_disease_latent)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(tidyverse)
library(stringr)
library(singleCellTK)
library(TBSignatureProfiler)
})
tb_disease_latent <- read_csv("TB_each_vs_each/TB_Disease_Latent_Pathways/TB_status_limma2019-12-18_TB_Disease_Latent.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(tb_disease_latent)
TB_disease <- read_csv("TB_factor_of_interest/TB_disease.csv") %>%
mast_filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(TB_disease)
tb_disease_latent <- read_csv("TB_each_vs_each/TB_Disease_Latent_Pathways/TB_status_limma2019-12-18_TB_disease_latent.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(tb_disease_latent)
tb_disease_latent <- read_csv("TB_each_vs_each/TB_Disease_Latent_Pathways/TB_status_limma2019-12-18_TB_disease_latent.csv") %>%
dplyr::filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(tb_disease_latent)
write_csv(tb_disease_latent, "TB_each_vs_each/TB_Tb_Disease_Latent_Pathways/tb_disease_latent_top500.csv")
write_csv(tb_disease_latent, "TB_each_vs_each/TB_Disease_Latent_Pathways/tb_disease_latent_top500.csv")
singleCellTK()
latent_subclinical <- read_csv("TB_each_vs_each/TB_Latent_Subclinical_Pathways/TB_status_limma2019-11-20_Latent_Subclinical.csv") %>%
filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(latent_subclinical)
write_csv(latent_subclinical, "TB_each_vs_each/TB_Disease_Subclinical_Pathways/latent_subclinical_top500.csv")
latent_subclinical <- read_csv("TB_each_vs_each/TB_Latent_Subclinical_Pathways/TB_status_limma2019-11-20_Latent_Subclinical.csv") %>%
dplyr::filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(latent_subclinical)
write_csv(latent_subclinical, "TB_each_vs_each/TB_Disease_Subclinical_Pathways/latent_subclinical_top500.csv")
write_csv(latent_subclinical, "TB_each_vs_each/TB_Latent_Subclinical_Pathways/latent_subclinical_top500.csv")
latent_progressor <- read_csv("TB_each_vs_each/TB_Latent_Progressor_Pathways/TB_status_limma2020-01-09_Latent_Progressor.csv") %>%
dplyr::filter(TB_status_limma_padj < 0.05) %>%
top_n(-500, TB_status_limma_padj)
View(latent_progressor)
write_csv(latent_progressor, "TB_each_vs_each/TB_Latent_Progressor_Pathways/latent_progressor_top500.csv")
list <- c("TB_Control_Latent_Pathways", "TB_Control_Progressor_Pathways", "TB_Control_Subclinical_Pathways", "TB_Control_TB_Disease_Pathways", "TB_Convert_Latent_Pathways", "TB_Convert_Progressors_Pathways", "TB_Convert_Subclinical_Pathways", "TB_Convert_TB_Disease_Pathways",  "TB_Disease_Progressor_Pathways", "TB_Latent_Subclinical_Pathways","TB_Latent_Progressor_Pathways")
redo <-  c()
no_sig_diff <- c("TB_Disease_Latent_Pathways","TB_Control_Convert_Pathways", "TB_Disease_Subclinical_Pathways", "TB_Progressor_Subclinical_Pathways")
top_pathways <- for(i in list) {
#extract data from enrichR databases
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
reactome <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
wiki <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
#bind the data files and filter top results
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
pathways <- filter(joined, Adjusted_P_value < 0.05)
write_csv(pathways, file.path("TB_each_vs_each", i , "top_pathways.csv"))
}
list <- c("TB_Control_Latent_Pathways", "TB_Control_Progressor_Pathways", "TB_Control_Subclinical_Pathways", "TB_Control_TB_Disease_Pathways", "TB_Convert_Latent_Pathways", "TB_Convert_Progressors_Pathways", "TB_Convert_Subclinical_Pathways", "TB_Convert_TB_Disease_Pathways",  "TB_Disease_Progressor_Pathways", "TB_Latent_Subclinical_Pathways","TB_Latent_Progressor_Pathways")
redo <-  c()
no_sig_diff <- c("TB_Disease_Latent_Pathways","TB_Control_Convert_Pathways", "TB_Disease_Subclinical_Pathways", "TB_Progressor_Subclinical_Pathways")
top_pathways <- for(i in list) {
#extract data from enrichR databases
kegg <- read_tsv(file.path("TB_each_vs_each", i , "KEGG_2019_Human_table.txt"))
reactome <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
wiki <- read_tsv(file.path("TB_each_vs_each", i , "Reactome_2016_table.txt"))
#bind the data files and filter top results
joined <- rbind(kegg, reactome, wiki)
names(joined) <- str_replace_all(names(joined), c(" " = "_" , "-" = "_"))
pathways <- dplyr::filter(joined, Adjusted_P_value < 0.05)
write_csv(pathways, file.path("TB_each_vs_each", i , "top_pathways.csv"))
}
